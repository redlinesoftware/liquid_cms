= Liquid CMS

A context aware CMS Ruby on Rails engine that uses liquid templates.

= Installation

Install the gem:

  gem install liquid_cms

Add it to your config/environment.rb:

  config.gem 'liquid_cms', '~> 0.2.0'

Run the generator:

  script/generator liquid_cms

= Configuration

Configure the engine in config/initializers/cms/liquid_cms.rb:

  If you wish to run the cms under multiple "contexts" (ie. a cms each for a company, business, customer, etc.) then you need to perform the following steps:
  
    * Set the *context_class* attribute to your apps context class:

      config.context_class = :Company

    * And then set the context object in the Cms::SetupController or any controller up the inheritance chain.

      Cms.set_context @company, self

Add any controller specific tasks and customize the logic in app/controllers/cms/setup_controller.rb

Run the migration:

  rake db:migrate

If you later decide to use the engine under a context, you'll have to re-run the migration.

= Usage

Once the engine is configured, you can view the CMS at the <b>/cms</b> path in your browser.

= Customization

In order to expose data in your application in the templates, liquid filters, drops, tags and blocks specific to your application can be added to the <b>app/liquid</b> folder.  Knowledge of liquid templates and the liquid library is required to do this.  Examples of custom filters, drops, tags and blocks can be found in the liquid_cms gem files or in additional documentation on this website or related forums.

A set of filters, drops and tags are provided in addition to the defaults provided by liquid.  The documentation link accessible in the CMS provides additional details.

= Contribution

If you experience any issues with this CMS engine, please open a bug report.  Contributionis to improve this engine is extremely welcome.  A 1.0 release will be made when the engine has a bit more _polish_ on it.
